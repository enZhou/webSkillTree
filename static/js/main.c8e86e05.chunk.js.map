{"version":3,"sources":["Components/Loading/Loading.tsx","Router/Router.ts","AppRouter.tsx","i18n/i18n.js","index.tsx","Utils/sessionStorage.ts","Utils/localStorageConfig.ts"],"names":["Loading","className","size","Home","lazy","routerList","path","title","component","App","i18n","useTranslation","useEffect","navigator","language","setSessionItem","LANGUAGE","changeLanguage","fallback","exact","map","item","key","getSessionItem","use","initReactI18next","init","resources","en","zn","lng","fallbackLng","keySeparator","interpolation","escapeValue","ReactDOM","render","document","getElementById","val","sessionStorage","setItem","getItem"],"mappings":"yRAYeA,G,OATY,WACzB,OACE,yBAAKC,UAAU,qBACb,uBAAMC,KAAK,UACX,+ECNOC,EAAOC,gBAAK,kBAAM,uDAClBC,EAAa,CAEtB,CACIC,KAAM,gBACNC,MAAO,2BACPC,UAAWJ,gBAAK,kBAAM,+DAI1B,CACIE,KAAM,SACNC,MAAO,eACPC,UAAWJ,gBAAK,kBAAM,+DAG1B,CACIE,KAAM,YACNC,MAAO,eACPC,UAAWJ,gBAAK,kBAAM,mC,wBCiBfK,MA9Bf,WAAgB,IACNC,EAASC,cAATD,KAUR,OATAE,qBAAU,WACmB,UAAvBC,UAAUC,UACZC,YAAeC,IAAU,MACzBN,EAAKO,eAAe,QAEpBF,YAAeC,IAAU,MACzBN,EAAKO,eAAe,SAErB,IAED,yBAAKhB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUiB,SAAU,kBAAC,EAAD,OAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACb,KAAK,IAAIE,UAAWL,IAE/BE,EAAWe,KAAI,SAAAC,GAAI,OAAI,kBAAC,IAAD,CAAOC,IAAKD,EAAKf,KAAMA,KAAMe,EAAKf,KAAME,UAAWa,EAAKb,qB,wBCb3FM,EAAW,GACXS,YAAeP,KACfF,EAAWS,YAAeP,MAE1BD,YAAeC,IAAU,MACzBF,EAAW,MAEfJ,IACKc,IAAIC,KACJC,KAAK,CACFC,UAAW,CACPC,GAAIA,EACJC,GAAIA,GAERC,IAAKhB,EACLiB,YAAajB,EACbkB,cAAc,EACdC,cAAe,CACXC,aAAa,KAGVxB,EAAf,EC5BAyB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U,gCCP1B,oEAAO,IAAMvB,EAAqD,SAACO,EAAaiB,GAC5EC,eAAeC,QAAQnB,EAAKiB,IAEnBhB,EAAuC,SAACD,GACjD,OAAOkB,eAAeE,QAAQpB,K,gCCLlC,kCAAO,IACMN,EAAmB,Y","file":"static/js/main.c8e86e05.chunk.js","sourcesContent":["import React from 'react'\nimport { Spin } from 'antd'\nimport './loading.less'\nconst Loading: () => any = () => {\n  return (\n    <div className='loading_container'>\n      <Spin size='large' />\n      <span>页面加载中···</span>\n    </div>\n  )\n}\n\nexport default Loading\n","import { lazy } from 'react'\nexport const Home = lazy(() => import('pages/Home/Home'));\nexport const routerList = [\n    // 验证手机号\n    {\n        path: '/verify-phone',\n        title: '验证手机',\n        component: lazy(() => import('pages/VerifyAccount/VerifyPhone'))\n    },\n\n    // 登录\n    {\n        path: '/login',\n        title: '登录',\n        component: lazy(() => import('pages/VerifyAccount/Login'))\n    },\n    // 注册\n    {\n        path: '/register',\n        title: '注册',\n        component: lazy(() => import('pages/Login&Register/Register/Register'))\n    },\n]","import React, { Suspense, useEffect } from 'react';\nimport { Switch, Route, HashRouter as Router, } from 'react-router-dom';\nimport Loading from 'components/Loading/Loading';\nimport { routerList, Home } from 'router/Router';\nimport { setSessionItem } from './Utils/sessionStorage';\nimport { LANGUAGE } from 'utils/localStorageConfig';\nimport { useTranslation } from 'react-i18next';\nfunction App() {\n  const { i18n } = useTranslation();\n  useEffect(() => {\n    if (navigator.language === 'zh-CN') {\n      setSessionItem(LANGUAGE, 'zn')\n      i18n.changeLanguage('zn')\n    } else {\n      setSessionItem(LANGUAGE, 'en')\n      i18n.changeLanguage('en')\n    }\n  }, [])\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Suspense fallback={<Loading />}>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              {\n                routerList.map(item => <Route key={item.path} path={item.path} component={item.component} />)\n              }\n            </Switch>\n          </Suspense>\n        </Switch>\n      </Router>\n    </div>\n  );\n\n}\n\nexport default App;\n","import i18n from \"i18next\";\nimport {\n    initReactI18next\n} from \"react-i18next\";\nimport {\n    LANGUAGE\n} from 'utils/localStorageConfig';\nimport en from './en.json'\nimport zn from './zn.json'\nimport {\n    getSessionItem,\n    setSessionItem\n} from 'utils/sessionStorage';\nlet language = '';\nif (getSessionItem(LANGUAGE)) {\n    language = getSessionItem(LANGUAGE)\n} else {\n    setSessionItem(LANGUAGE, 'zn')\n    language = 'zn'\n}\ni18n\n    .use(initReactI18next)\n    .init({\n        resources: {\n            en: en,\n            zn: zn\n        },\n        lng: language,\n        fallbackLng: language,\n        keySeparator: false,\n        interpolation: {\n            escapeValue: false\n        }\n    });\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './AppRouter';\nimport 'i18n/i18n';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);","\nexport const setSessionItem: (key: string, val: string) => void = (key: string, val: string) => {\n    sessionStorage.setItem(key, val);\n}\nexport const getSessionItem: (key: string) => any = (key: string) => {\n    return sessionStorage.getItem(key);\n}\nexport const removeSessionItem: (name: string) => void = (name: string) => {\n    sessionStorage.removeItem(name)\n}\nexport const clearSessionStorage: () => void = () => {\n    sessionStorage.clear()\n}","export const TOKEN: string = 'token'; // 左侧菜单\nexport const LANGUAGE: string = 'language'; // 左侧菜单"],"sourceRoot":""}