{"version":3,"sources":["Utils/sessionStorage.ts","Utils/localStorageConfig.ts","Components/Loading/Loading.tsx","Router/Router.ts","AppRouter.tsx","i18n/i18n.js","index.tsx"],"names":["setSessionItem","key","val","sessionStorage","setItem","getSessionItem","getItem","LANGUAGE","Loading","className","size","Home","lazy","routerList","path","title","component","children","App","i18n","useTranslation","useEffect","navigator","language","changeLanguage","fallback","exact","map","item","use","initReactI18next","init","resources","en","zn","lng","fallbackLng","keySeparator","interpolation","escapeValue","ReactDOM","render","document","getElementById"],"mappings":"yLACA,oEAAO,IAAMA,EAAqD,SAACC,EAAaC,GAC5EC,eAAeC,QAAQH,EAAKC,IAEnBG,EAAuC,SAACJ,GACjD,OAAOE,eAAeG,QAAQL,K,gCCLlC,kCAAO,IACMM,EAAmB,Y,gICWjBC,G,OATY,WACzB,OACE,yBAAKC,UAAU,qBACb,uBAAMC,KAAK,UACX,+ECNOC,EAAOC,gBAAK,kBAAM,kCAClBC,EAAa,CAGtB,CACIC,KAAM,QACNC,MAAO,eACPC,UAAWJ,gBAAK,kBAAM,8DACtBK,SAAU,CACN,CACIH,KAAM,cACNC,MAAO,eACPC,UAAWJ,gBAAK,kBAAM,iEAWlC,CACIE,KAAM,SACNC,MAAO,eACPC,UAAWJ,gBAAK,kBAAM,gE,wBCSfM,MA7Bf,WAAgB,IACNC,EAASC,cAATD,KAWR,OAVAE,qBAAU,WACLhB,YAAeE,OACS,UAAvBe,UAAUC,UACZvB,YAAeO,IAAU,MACzBY,EAAKK,eAAe,QAEpBxB,YAAeO,IAAU,MACzBY,EAAKK,eAAe,UAErB,IAED,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACZ,KAAK,IAAIE,UAAWL,IAE/BE,EAAWc,KAAI,SAAAC,GAAI,OAAI,kBAAC,IAAD,CAAO3B,IAAK2B,EAAKd,KAAMA,KAAMc,EAAKd,KAAME,UAAWY,EAAKZ,oB,wBCbzFO,EAAW,GACXlB,YAAeE,KACfgB,EAAWlB,YAAeE,MAE1BP,YAAeO,IAAU,MACzBgB,EAAW,MAEfJ,IACKU,IAAIC,KACJC,KAAK,CACFC,UAAW,CACPC,GAAIA,EACJC,GAAIA,GAERC,IAAKZ,EACLa,YAAab,EACbc,cAAc,EACdC,cAAe,CACXC,aAAa,KAGVpB,EAAf,EC5BAqB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.b9c45fe3.chunk.js","sourcesContent":["\nexport const setSessionItem: (key: string, val: string) => void = (key: string, val: string) => {\n    sessionStorage.setItem(key, val);\n}\nexport const getSessionItem: (key: string) => any = (key: string) => {\n    return sessionStorage.getItem(key);\n}\nexport const removeSessionItem: (name: string) => void = (name: string) => {\n    sessionStorage.removeItem(name)\n}\nexport const clearSessionStorage: () => void = () => {\n    sessionStorage.clear()\n}","export const TOKEN: string = 'token'; // 左侧菜单\nexport const LANGUAGE: string = 'language'; // 左侧菜单","import React from 'react'\nimport { Spin } from 'antd'\nimport './loading.less'\nconst Loading: () => any = () => {\n  return (\n    <div className='loading_container'>\n      <Spin size='large' />\n      <span>页面加载中···</span>\n    </div>\n  )\n}\n\nexport default Loading\n","import { lazy } from 'react'\nexport const Home = lazy(() => import('pages/Home/Home'));\nexport const routerList = [\n\n    // 登录\n    {\n        path: '/user',\n        title: '登录',\n        component: lazy(() => import('pages/VerifyAccount/Login/Login')),\n        children: [\n            {\n                path: '/user/login',\n                title: '登录',\n                component: lazy(() => import('pages/VerifyAccount/Login/Login'))\n            },\n            // 注册\n            // {\n            //     path: '/register',\n            //     title: '注册',\n            //     component: lazy(() => import('pages/Login&Register/Register/Register'))\n            // },\n        ]\n    },\n    // 登录\n    {\n        path: '/login',\n        title: '登录',\n        component: lazy(() => import('pages/VerifyAccount/Login/Login'))\n    },\n]","import React, { Suspense, useEffect } from 'react';\nimport { Switch, Route, HashRouter as Router, } from 'react-router-dom';\nimport Loading from 'components/Loading/Loading';\nimport { routerList, Home } from 'router/Router';\nimport { setSessionItem,getSessionItem } from './Utils/sessionStorage';\nimport { LANGUAGE } from 'utils/localStorageConfig';\nimport { useTranslation } from 'react-i18next';\nfunction App() {\n  const { i18n } = useTranslation();\n  useEffect(() => {\n    if(getSessionItem(LANGUAGE)) return\n    if (navigator.language === 'zh-CN') {\n      setSessionItem(LANGUAGE, 'zn')\n      i18n.changeLanguage('zn')\n    } else {\n      setSessionItem(LANGUAGE, 'en')\n      i18n.changeLanguage('en')\n    }\n  }, [])\n  return (\n    <Router>\n      <Switch>\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            {\n              routerList.map(item => <Route key={item.path} path={item.path} component={item.component} />)\n            }\n          </Switch>\n        </Suspense>\n      </Switch>\n    </Router>\n  );\n\n}\n\nexport default App;\n","import i18n from \"i18next\";\nimport {\n    initReactI18next\n} from \"react-i18next\";\nimport {\n    LANGUAGE\n} from 'utils/localStorageConfig';\nimport en from './en.json'\nimport zn from './zn.json'\nimport {\n    getSessionItem,\n    setSessionItem\n} from 'utils/sessionStorage';\nlet language = '';\nif (getSessionItem(LANGUAGE)) {\n    language = getSessionItem(LANGUAGE)\n} else {\n    setSessionItem(LANGUAGE, 'zn')\n    language = 'zn'\n}\ni18n\n    .use(initReactI18next)\n    .init({\n        resources: {\n            en: en,\n            zn: zn\n        },\n        lng: language,\n        fallbackLng: language,\n        keySeparator: false,\n        interpolation: {\n            escapeValue: false\n        }\n    });\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './AppRouter';\nimport 'i18n/i18n';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}